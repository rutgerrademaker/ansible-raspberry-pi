networks:
  local:
    driver: bridge
    name: ___APP_NAME___

  public:
    external: true
    name: "webproxy"

services:
  prometheus-node-exporter:
    user: "___USER___"
    image: prom/node-exporter:latest
    container_name: ___APP_NAME___-node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - local
  
  mqtt2prometheus:
    user: "___USER___"
    image: ghcr.io/hikhvar/mqtt2prometheus:latest
    container_name: mqtt2prometheus
    restart: unless-stopped
    env_file:
      - /data/prometheus/mqtt2prometheus/.env
    volumes:
      - /data/prometheus/mqtt2prometheus/config.yaml:/config.yaml
    networks:  
      - local

  prometheus:
    container_name: ___APP_NAME___
    image: prom/prometheus:latest
    user: "___USER___"
    restart: unless-stopped
    volumes:
      - /data/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /data/prometheus/:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    labels:
      - "traefik.backend=___APP_NAME___"
      - "traefik.docker.network=webproxy"
      - "traefik.http.routers.___APP_NAME___.rule=Host(`___HOST___`)"
      - "traefik.frontend.rule=Host:___HOST___"
      - "traefik.http.routers.___APP_NAME___.entrypoints=web"
      - "traefik.enable=true"
      - "traefik.port=___DOCKER_PORT_HTTP___"
      - "traefik.default.protocol=http"
      - "traefik.http.services.___APP_NAME___.loadbalancer.server.port=___DOCKER_PORT_HTTP___"
    networks:
       - public
       - local